{"ast":null,"code":"var _jsxFileName = \"E:\\\\SOFTWARE DEV CLASS\\\\Movie-MERN\\\\CLIENT\\\\movie-mern\\\\src\\\\components\\\\comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentSection() {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState({\n    name: \"\",\n    text: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Make POST request to create new comment\n    await axios.post(\"http://localhost:4005/api/comments/\", newComment);\n\n    // Clear input fields\n    setNewComment({\n      name: \"\",\n      text: \"\"\n    });\n\n    // Fetch updated comments from server\n    const response = await axios.get(\"http://localhost:4005/api/comments/\");\n    setComments(response.data);\n  };\n  const handleDelete = async (id, index) => {\n    console.log(\"id:\", id);\n    console.log(\"comments before delete:\", comments);\n\n    // check if id is defined\n    if (!id) {\n      console.error(\"Invalid comment id:\", id);\n      return;\n    }\n\n    // Make DELETE request to delete comment\n    await axios.delete(`http://localhost:4005/api/comments/${id}`);\n\n    // Update state to remove deleted comment\n    const newComments = [...comments];\n    newComments.splice(index, 1);\n    console.log(\"comments after delete:\", newComments);\n    setComments(newComments);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"http://localhost:4005/api/comments/\");\n      setComments(response.data);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nameInput\",\n            className: \"form-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment.name,\n            onChange: e => setNewComment({\n              ...newComment,\n              name: e.target.value\n            }),\n            className: \"form-control\",\n            id: \"nameInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"commentInput\",\n            className: \"form-label\",\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            value: newComment.text,\n            onChange: e => setNewComment({\n              ...newComment,\n              text: e.target.value\n            }),\n            className: \"form-control\",\n            rows: \"3\",\n            id: \"commentInput\",\n            placeholder: \"Join the discussion and leave a comment!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ms-3\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: comment.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDelete.bind(this, comment.comment_id, index),\n                children: \"Delete Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentSection, \"vPWo5+OkrPodwJnOSsAe1qkSOnw=\");\n_c = CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CommentSection","_s","comments","setComments","newComment","setNewComment","name","text","handleSubmit","e","preventDefault","post","response","get","data","handleDelete","id","index","console","log","error","delete","newComments","splice","fetchData","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","rows","placeholder","map","comment","onClick","bind","comment_id","_c","$RefreshReg$"],"sources":["E:/SOFTWARE DEV CLASS/Movie-MERN/CLIENT/movie-mern/src/components/comments.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CommentSection() {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState({ name: \"\", text: \"\" });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Make POST request to create new comment\r\n    await axios.post(\"http://localhost:4005/api/comments/\", newComment);\r\n\r\n    // Clear input fields\r\n    setNewComment({ name: \"\", text: \"\" });\r\n\r\n    // Fetch updated comments from server\r\n    const response = await axios.get(\"http://localhost:4005/api/comments/\");\r\n    setComments(response.data);\r\n  };\r\n\r\n  const handleDelete = async (id, index) => {\r\n    console.log(\"id:\", id);\r\n    console.log(\"comments before delete:\", comments);\r\n\r\n    // check if id is defined\r\n    if (!id) {\r\n      console.error(\"Invalid comment id:\", id);\r\n      return;\r\n    }\r\n\r\n    // Make DELETE request to delete comment\r\n    await axios.delete(`http://localhost:4005/api/comments/${id}`);\r\n\r\n    // Update state to remove deleted comment\r\n    const newComments = [...comments];\r\n    newComments.splice(index, 1);\r\n    console.log(\"comments after delete:\", newComments);\r\n    setComments(newComments);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(\"http://localhost:4005/api/comments/\");\r\n      setComments(response.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card bg-light\">\r\n      <div className=\"card-body\">\r\n        {/* <!-- Comment form--> */}\r\n        <form onSubmit={handleSubmit} className=\"mb-4\">\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"nameInput\" className=\"form-label\">\r\n              Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={newComment.name}\r\n              onChange={(e) =>\r\n                setNewComment({ ...newComment, name: e.target.value })\r\n              }\r\n              className=\"form-control\"\r\n              id=\"nameInput\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"commentInput\" className=\"form-label\">\r\n              Comment\r\n            </label>\r\n            <textarea\r\n              type=\"text\"\r\n              value={newComment.text}\r\n              onChange={(e) =>\r\n                setNewComment({ ...newComment, text: e.target.value })\r\n              }\r\n              className=\"form-control\"\r\n              rows=\"3\"\r\n              id=\"commentInput\"\r\n              placeholder=\"Join the discussion and leave a comment!\"\r\n            ></textarea>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n        {/* <!-- Comment with nested comments--> */}\r\n        <div className=\"d-flex mb-4\">\r\n          {/* <!-- Parent comment--> */}\r\n          {/*<div className=\"flex-shrink-0\">\r\n            <img\r\n              className=\"rounded-circle\"\r\n              src=\"https://dummyimage.com/50x50/ced4da/6c757d.jpg\"\r\n              alt=\"...\"\r\n            />\r\n            </div>*/}\r\n\r\n          <div className=\"ms-3\">\r\n            <ul>\r\n              {comments.map((comment, index) => (\r\n                <li key={index}>\r\n                  <div>\r\n                    <strong>{comment.name}</strong>\r\n                  </div>\r\n                  <div>{comment.text}</div>\r\n                  <button\r\n                    onClick={handleDelete.bind(this, comment.comment_id, index)}\r\n                  >\r\n                    Delete Comment\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        {/* <!-- Single comment--> */}\r\n        <div className=\"d-flex\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}